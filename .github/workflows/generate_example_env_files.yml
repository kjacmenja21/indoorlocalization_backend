name: Generate and Commit .env.example Files

on:
  push:
    branches:
      - main # Trigger on push to the 'main' branch. Adjust as needed.

jobs:
  generate-env-files:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x" # Use the Python version you need

      # Step 3: Install Poetry
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      # Step 4: Install dependencies using Poetry
      - name: Install dependencies
        run: |
          poetry install --no-root

      # Step 5: Run the script to generate .env.example files
      - name: Run script to generate .env.example
        run: |
          poetry run python cicd/generate_env_example.py

      # Step 6: Commit and push the generated .env.example files
      - name: Commit generated .env.example files
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Add generated files to the commit
          git add *.env.example

          # Check if there are changes to commit
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update .env.example files"
            git push
          fi
